<?xml version="1.0" encoding="UTF-8"?><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://cmm.core.ecf/BaseTypes/cmmEnhancementTypes/trade/2017/02/22/" version="2.0" xmlns:tns="http://cmm.core.ecf/BaseTypes/cmmEnhancementTypes/trade/2017/02/22/" xmlns:tns_1="http://cmm.core.ecf/BaseTypes/cmmValueTypes/trade/2017/02/22/" xmlns:tns_2="http://cmm.core.ecf/BaseTypes/cmmCodeListTypes/trade/2017/02/22/">
  <xsd:import namespace="http://cmm.core.ecf/BaseTypes/cmmCodeListTypes/trade/2017/02/22/" schemaLocation="cmmCodeListTypes.xsd"/>
  <xsd:import namespace="http://cmm.core.ecf/BaseTypes/cmmValueTypes/trade/2017/02/22/" schemaLocation="cmmValueTypes.xsd"/>
  <xsd:complexType name="Timer">
    <xsd:annotation>
      <xsd:documentation>Object that monitors whether a particular event occurs before a particular deadline</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="deadline" type="tns_1:DateTime">
        <xsd:annotation>
          <xsd:documentation>Date at which the timer is set to expire</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isActive" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>indicator telling whether the time is active or not</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TimeAware">
    <xsd:annotation>
      <xsd:documentation>Abstract class of objects with a validity period, whose start date (effective date) and end date (invalidation date) can be retroactively set in the past or proactively set in the future. NOTE The ability to set the effective date of an object in the past may be relevant for retroactive laws and regulations. It will also allow information about future changes (i.e. changes in master data such as party addresses) to be recorded now. Object that are both TimeAware and Auditable support 'time travelling', allowing to observe the state of the object as it was at any point in time.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="invalidDate" type="tns_1:DateTime">
        <xsd:annotation>
          <xsd:documentation>The date at which the object will or has become invalid NOTE: the validity period of a time aware object includes the invalid date, i.e.: it runs from 00:00:00 (hhmmss) of the effective date to 23:59:59 of the invalid date </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="effectiveDate" type="tns_1:DateTime">
        <xsd:annotation>
          <xsd:documentation>The date at which the object will or has become valid NOTE: the validity period of a time aware object includes the effective date, i.e.: it runs from 00:00:00 (hhmmss) of the effective date to 23:59:59 of the invalid date </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:annotation>
      <xsd:documentation>Object capturing information supplementing an extendable object. NOTE: the type of the additional data may be described in free text (using the attribute 'description') or may be codified (using the attribute 'code''. The contents of the additional data is captured in the attribute 'value'.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="value" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>The contents of the data element extending the extendable object.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="type" type="tns_2:ExtensionType">
        <xsd:annotation>
          <xsd:documentation>Type of the data captured in the extension.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Auditable">
    <xsd:annotation>
      <xsd:documentation>Abstract class of objects of which versions, including auditing data such as the user who created it, are kept.</xsd:documentation>
      <xsd:documentation>Related objects: successor(Auditable) [0..1] precursor(Auditable) [0..1] creator(User) [1..1] </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="isCurrent" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Indicator telling whether this version is a current (latest and valid) version of the auditable object</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="versionNumber" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Number by which this version of the auditable object is identified NOTE:   first version of an auditable object has version number 1</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="creationDate" type="tns_1:DateTime">
        <xsd:annotation>
          <xsd:documentation>The date/time on which this version of the object was created.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="isDisplayable" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Indicator telling whether this version of the auditable object is to be displayed to the DMS user NOTE 1:	We distinguish between versions that may viewed by the user or those that may be accessible for auditing purposes NOTE 2:  	Each time a displayable version of an object is created, this is set. For Declarations, this is the case when: - the declaration is received (when status 'received' is set) - the declaration is corrected, amended (including by what we called an 'SRN amendment) - a new customs position for declaration has been determined - a new customs debt for the declaration has been determined</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Status">
    <xsd:annotation>
      <xsd:documentation>Object capturing the state of a DMS entity. WCO: Details identifying and specifying declaration processing status</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Auditable">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="invalidDate" type="tns_1:DateTime">
            <xsd:annotation>
              <xsd:documentation>Date/time the status  has become invalid. </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="timeStamp" type="tns_1:DateTime">
            <xsd:annotation>
              <xsd:documentation>The official Date/time at which the status has become effective. NOTE: the effectiveDate is not identical to the creationDate (the creation date will change with any new version, while the effective date will change only when the status changes). WCO REF: 380 WCO NAME: Status date and time WCO DESC: Date and time on which a specified event (i.e. the involved status) becomes effective.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="NotificationStatus">
    <xsd:annotation>
      <xsd:documentation>Object capturing the status a notification may inform about.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:Status">
        <xsd:sequence>
          <xsd:element name="type" type="tns_2:NotificationStatusType">
            <xsd:annotation>
              <xsd:documentation>The (encoded) type of the notification status</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="pointer" type="tns_1:Pointer">
            <xsd:annotation>
              <xsd:documentation>The data element to which the status applies</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType abstract="true" name="Extendable">
    <xsd:annotation>
      <xsd:documentation>Abstract class of objects that can be flexibly extended through an associated extension object capturing free text or codified data. </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="extensions" type="tns:Extension">
        <xsd:annotation>
          <xsd:documentation>The extension(s) associated with this extendable object.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="User">
    <xsd:annotation>
      <xsd:documentation>User of the DMS NOTE: the user may be a machine (component, (sub) system, program) or a person</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="isMachine" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Indicator telling that the user is not a human but a machine (program, process, subsystem, component)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="name" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Name of the user (person or machine/program/system), if any.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="id" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>The id by which the user (person or machine/program/system) is identified</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Task">
    <xsd:annotation>
      <xsd:documentation>A piece of work assigned or done as part of the activities performed in the declaration management context NOTE: service as a parent to control task </xsd:documentation>
      <xsd:documentation>Related objects: declaration(Declaration) [1..1] </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="reason" type="tns_2:TaskReasonType">
        <xsd:annotation>
          <xsd:documentation>Reason why the task was initiated.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="actionTimeStamp" type="tns_1:DateTime">
        <xsd:annotation>
          <xsd:documentation>The time the action related to this task was taken or is assumed to be taken</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="action" type="tns_2:TaskActionType">
        <xsd:annotation>
          <xsd:documentation>the (encoded) action taken in this task.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="specialTaskType" type="tns_2:SpecialTaskType">
        <xsd:annotation>
          <xsd:documentation>The category of special tasks (if any) to which the task belongs</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="explanation" type="tns_1:Text">
        <xsd:annotation>
          <xsd:documentation>Additional information with respect to the task to be performed, entered by the officer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="creationDate" type="tns_1:DateTime">
        <xsd:annotation>
          <xsd:documentation>Date at which the task was created</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="type" type="tns_2:TaskType">
        <xsd:annotation>
          <xsd:documentation>Object capturing the type of the task. NOTE: NL alias 'Behandelwijze'.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isFinished" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Indicator telling whether the task is finished. NOTE: 	For control tasks, the attribute's value can be derived since a control task is finished when it has a control result; if a control result's 		attribute 'isCauseForNewControl' reads 'True' this implies that a new control task is generated, so the original task is and remains finished.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="user" type="tns:User">
        <xsd:annotation>
          <xsd:documentation>Person to which the task is assigned</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>